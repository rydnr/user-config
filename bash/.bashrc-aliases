alias d="ls --color"
alias ls="ls --color=auto"
alias ll="ls --color -l"
alias acmcvs="CVS_RSH=ssh CVSROOT=:ext:chous@cvs.acm-sl.org:/var/cvs cvs"
alias t24cvs="CVS_RSH=ssh CVSROOT=:ext:jlean@sourceforge.office.tipp24.de:/home/cvsroot cvs"
alias v24cvs="CVS_RSH=ssh CVSROOT=:ext:jlean@192.168.34.253:/home/cvsroot cvs"
#alias v24cvs="CVS_RSH=ssh CVSROOT=:pserver:jlean@192.168.34.253:/home/cvsroot cvs"
alias w3ccvs="CVSROOT=:pserver:anonymous@dev.w3.org:/sources/public cvs"

#alias emacs="(pushd ~ ; emacs --unibyte ; popd) &"
#alias emacs="emacs -nw --unibyte"

alias rdesktop="rdesktop -k en-us -g 1025x768 "
alias syspass="mount /mnt/delta-managed 2>&1; oocalc /mnt/delta-managed/Tecnologia/Sysadmin/V24\ Administration/Policies/System\ Passwords/Pass_Sysadmin.xls"
alias nicesvn="ps -ef | grep svn | grep -v grep | awk '{printf(\"sudo renice -19 -p %s\n\", \$2);}' | sh"

alias euler="ssh -p 21 euler"
alias winxp="qemu -hda /dev/sda -hdb /dev/sdb"

alias mvn="/run/current-system/sw/bin/mvn -T 1C -Dlog4j.configuration=file:///home/chous/github/queryj/queryj-core/src/test/resources/log4j.xml -Dqueryjroot=/home/chous/github/queryj"

alias mvn-jde="mvn org.apache.maven.plugin:maven-emacs-plugin:1.2.2:jdee"
alias mvn-jetty="mvn -Dorg.mortbay.jetty.webapp.parentLoaderPriority=true jetty:run-exploded"
alias jetty7-debug='java -Xdebug -Xrunjdwp:transport=dt_socket,address=9998,server=y,suspend=y -DDEBUG -Dlog4j.configuration=file://$PWD/log4j-v24.xml -jar start.jar OPTIONS=All'
alias jetty7-start='java -DDEBUG -Dlog4j.configuration=file://$PWD/log4j-v24.xml -jar start.jar OPTIONS=All'
alias jdownloader="java -jar ~/.jd/JDownloader.jar"
alias git-push-queryj="git push origin +refs/heads/ventura24-2_0-stable.local:ventura24-2_0-stable"
alias lp='sudo cat ~/.lp/lastpass | tail -n 1 | xclip'
alias kde='sudo cat ~/.lp/kde | tail -n 1 | xclip'
alias prod='sudo cat ~/.lp/produccion | tail -n 1 | xclip'
alias music="sshfs chous@euler:/home/chous/realhome/music /home/chous/music/euler"
alias mvn-deploy="mvn deploy:deploy-file -Durl=http://maven/artifactory/ext-releases-local -DrepositoryId=internal"
alias checkstyle=~/algs4/bin/checkstyle
alias findbugs=~/algs4/bin/findbugs
alias rt-queryj="git --git-dir ~/.RT.git.d/queryj --work-tree ~/github/queryj"
alias rt-rt="git --git-dir ~/.RT.git.d/RT --work-tree ~/github/RT"
alias rt-codemotion2013="git --git-dir ~/.RT.git.d/codemotion-2013 --work-tree ~/github/codemotion-2013"
alias rt-antlr4netty="git --git-dir ~/.RT.git.d/kata-antlr4-netty --work-tree ~/github/kata-antlr4-netty"
alias rt-walkmod-code-conventions="git --git-dir ~/.RT.git.d/walkmod-code-conventions --work-tree ~/github/walkmod-code-conventions"
alias rt-blender-katas="git --git-dir ~/.RT.git.d/blender-katas --work-tree ~/github/blender-katas"
alias tor="~/toolbox/tor/start-tor-browser"
alias mongo="docker run -d -p 27017:27017 acmsl/mongodb-pagecarelanding"
alias groovy="~/toolbox/groovy/bin/groovy --indy";
alias mcollective-build="ACTIVEMQ_CLIENT_PASSWORD=\"ZD2rTwbbmVyUzxbXzZynSEAcsRb7ar4xKeyRj83PN7HxDegZ34Tv3eUnpPyV4QCU\" ACTIVEMQ_SERVER_PASSWORD=\"c2mA8TBkEV5mu9w6jaX7hFvdNZXmNqsenD7ufHa5yKtb3tb9hARRtPmJKAKPC32h\" ACTIVEMQ_PRE_SHARED_KEY=\"nqm9wy97tjfr9fH4phKS3Cf74r4KRn9mwjA2UTnPpYWsTPsBEXNxZe6KXFdZ8fRM\" DATE=\"201410\" ./build.sh mcollective-activemq mcollective-common mcollective-server mcollective-client";
alias du-large="du -h | grep -P '^[0-9\.]+G'";
alias jenkins="cp ~/.ssh/id_rsa-github-jenkins* ~/github/acmsl-jenkins-configs; docker run -d -m=\"1024m\" -c=1 -p 8081:8080 -v ~/github/acmsl-jenkins-configs:/home/jenkins acmsl/jenkins:latest"
#alias jenkins="cp ~/.ssh/id_rsa-github-jenkins* ~/github/acmsl-jenkins-configs; docker run -d -c=1 -p 8081:8080 -v ~/github/acmsl-jenkins-configs:/home/jenkins acmsl/jenkins:latest"
alias rt-devdel="git --git-dir \"/home/chous/.RT.git.d/devdel\" --work-tree \"/home/chous/github/devdel\"";
alias rt-gtd="git --git-dir \"/home/chous/.RT.git.d/gtd\" --work-tree \"/home/chous/github/gtd\"";
alias rt-JavaCSS="git --git-dir \"/home/chous/.RT.git.d/JavaCSS\" --work-tree \"/home/chous/github/JavaCSS\"";
alias rt-sails-platzi="git --git-dir \"/home/chous/.RT.git.d/sails-platzi\" --work-tree \"/home/chous/github/sails-platzi\"";
alias rt-lc="git --git-dir \"/home/chous/.RT.git.d/lc\" --work-tree \"/home/chous/github/lc\"";
alias startx="sudo /etc/init.d/udev restart; sudo chgrp video /proc/ati; /usr/bin/startx"
alias ipodenc="~/dev/acmsl/svn/misc/trunk/bin/ipodenc.sh"
#alias mvn="mvn -Dlog4j.configuration=file://${HOME}/.m2/log4j.xml"
#alias mvn="color_maven -Dlog4j.configuration=file:///home/chous/.m2/log4j.xml"
alias mvn-jde="mvn org.apache.maven.plugin:maven-emacs-plugin:1.2.2:jdee"
alias euler="ssh -p 21 euler"
alias winxp="qemu -hda /dev/sda -hdb /dev/sdb"
alias sm="wine /mnt/windows/SM\ v7/SM\ v7/Simulator.exe"
export GRADLE_TAG='3.2.1';
export GRAILS_TAG='201610';
export NODEJS_TAG='201610';
#alias tern='mkdir ${HOME}/.npm-${PWD##*/} 2> /dev/null; docker run -it -p 36515:36515 --rm --name tern -v ${PWD}:/home/osoco/workspace -v ${HOME}/toolbox/tern/bin:/bin -v ${HOME}/toolbox/tern/lib:/lib -v ${HOME}/.npm-${PWD##*/}:/home/osoco/.npm nexus.osoco.es/osoco/tern:${NODEJS_TAG}';
#alias tern-tboxfe='mkdir ${HOME}/.npm-tboxfe 2> /dev/null; docker run -it --rm --name tboxfe-tern -p 36515:36515 -v ${HOME}/toolbox/tern/bin:/bin -v ${HOME}/toolbox/tern/lib:/lib -v /home/chous/osoco/Travelbox-Frontend/app:/home/osoco/workspace -v ${HOME}/.npm-tboxfe:/home/osoco/.npm nexus.osoco.es/osoco/tern:${NODEJS_TAG}';
#alias npm-tboxfe='mkdir ${HOME}/.npm-tboxfe 2> /dev/null; docker run -it --rm --link tboxfe-tern:tern -e TERM="${TERM}" -e TERMCAP="${TERMCAP}" -v ${PWD}:/home/osoco/workspace -v ${HOME}/.npm-tboxfe:/home/osoco/.npm nexus.osoco.es/osoco/nodejs:${NODEJS_TAG} npm';
#alias gradle='docker run -it --rm -e DOCKER_HOST="tcp://socat:2375" --link socat:socat -e DOCKER_HOST="tcp://socat:2375" -e HOST_PROJECTDIR="${PWD}" -e HOST_USERHOME="${HOME}" -e TERM="${TERM}" -e TERMCAP="${TERMCAP}" -v ${PWD}:/work --add-host nexus.osoco.es:10.3.0.41 nexus.osoco.es/osoco/gradle:${GRADLE_TAG}';
alias gradle-tboxbe='export _prj="tboxbe"; mkdir ${HOME}/.gradle-${_prj} 2> /dev/null; docker run -it --rm -e DOCKER_HOST="tcp://socat:2375" --link socat:socat -e HOST_PROJECTDIR="${PWD}" -e HOST_USERHOME="${HOME}" -e TERM="${TERM}" -e TERMCAP="${TERMCAP}" -v ${PWD}:/opt/workspace -v ~/.gradle-${_prj}:/opt/.gradle nexus.osoco.es/osoco/gradle:${GRADLE_TAG}';
alias gradle-tboxbo='export _prj="tboxbo"; mkdir ${HOME}/.gradle-${_prj} 2> /dev/null; docker run -it --rm -e DOCKER_HOST="tcp://socat:2375" --link socat:socat -e HOST_PROJECTDIR="${PWD}" -e HOST_USERHOME="${HOME}" -e TERM="${TERM}" -e TERMCAP="${TERMCAP}" -v ${PWD}:/opt/workspace -v ~/.gradle-${_prj}:/opt/.gradle nexus.osoco.es/osoco/gradle:${GRADLE_TAG}';
alias grails-tboxbo='export _prj="tboxbo"; mkdir ${HOME}/.grails-${_prj} 2> /dev/null; docker run -it --rm -e TERM="${TERM}" -e TERMCAP="${TERMCAP}" -v ${PWD}:/opt/workspace -v ~/.grails-${_prj}:/opt/.grails nexus.osoco.es/osoco/grails:${GRAILS_TAG}';
alias gradle-tboxse='export _prj="tboxse"; mkdir ${HOME}/.gradle-${_prj} 2> /dev/null; docker run -it --rm -e DOCKER_HOST="tcp://socat:2375" --link socat:socat -e HOST_PROJECTDIR="${PWD}" -e HOST_USERHOME="${HOME}" -e TERM="${TERM}" -e TERMCAP="${TERMCAP}" -v ${PWD}:/opt/workspace -v ~/.gradle-${_prj}:/opt/.gradle nexus.osoco.es/osoco/gradle:${GRADLE_TAG}';
alias docker-socat="docker run -d --name socat -v /var/run/docker.sock:/var/run/docker.sock sequenceiq/socat"
alias tbox-start="for s in socat tboxqueues tboxse-redis tboxse tboxbe-db tboxbe tboxfe; do docker start \${s}; done"
alias android-studio="docker run -it --rm --name android-studio --rm -v ${HOME}/AndroidProjects:/data -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -v /dev/kvm:/dev/kvm nexus.osoco.es/osoco/android-studio:201608"
alias socat-socket-proxy='socat -v UNIX-LISTEN:/tmp/docker.sock,fork UNIX-CONNECT:/var/run/docker.sock'
alias mrproper='docker rm $(docker ps -q -f status=exited); docker volume rm $(docker volume ls -qf dangling=true); docker rmi $(docker images --filter "dangling=true" -q --no-trunc)'
#alias pharo='docker run -it --rm -v ${PWD}:/work -v ${XSOCK}:${XSOCK} -v ${XAUTH}:${XAUTH} -e XAUTHORITY:${XAUTH} acmsl/pharo:5.0 ';
export XSOCK=/tmp/.X11-unix
export XAUTH=/tmp/.docker.xauth
#alias gradle='docker run -it --rm -v ${PWD}:/work -v ${XSOCK}:${XSOCK} -v ${XAUTH}:${XAUTH} -e XAUTHORITY:${XAUTH} acmsl/gradle:3.2.1 ';
alias gradle-packer='export _prj="packer"; mkdir ${HOME}/.gradle-${_prj} 2> /dev/null; docker run -it --rm -e DOCKER_HOST="tcp://socat:2375" --link socat:socat -e HOST_PROJECTDIR="${PWD}" -e HOST_USERHOME="${HOME}" -e TERM="${TERM}" -e TERMCAP="${TERMCAP}" -v ${PWD}:/work -v ~/.gradle-${_prj}:/opt/.gradle nexus.osoco.es/osoco/gradle:${GRADLE_TAG}';
#alias pharo='docker run -it --rm -v /home/chous/osoco:/work --net=host -v ${XSOCK}:${XSOCK} -v ${XAUTH}:${XAUTH} -e XAUTHORITY:${XAUTH} nexus.osoco.es/osoco/gradle-pharo'
#source ~/bin/color_maven.zsh
#alias ssh='ssh-ident'
alias term="urxvt --background-expr \"scale keep { again 3600; return load \\\"${HOME}/wallpapers/$(ls ${HOME}/wallpapers | sort -R | head -n 1)\\\" }\""; 
declare -a mouseCursors=('Black' 'White' 'Orange' 'Green' 'Blue' 'Ghost');
mouseCursor=${mouseCursors[$RANDOM % ${#mouseCursors[@]} ]}
alias set-mouse-cursor="xsetroot -cursor_name ComixCursors-${mouseCursor}-Large";

# from https://www.cyberciti.biz/tips/bash-aliases-mac-centos-linux-unix.html

#1: Control ls command output

## Colorize the ls output ##
alias ls='ls --color=auto'

## Use a long listing format ##
alias ll='ls -la'

## Show hidden files ##
alias l.='ls -d .* --color=auto'

#2: Control cd command behavior

## get rid of command not found ##
alias cd..='cd ..'

## a quick way to get out of current directory ##
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'

#3: Control grep command output

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

#4: Start calculator with math support

alias bc='bc -l'

#4: Generate sha1 digest

alias sha1='openssl sha1'

#5: Create parent directories on demand

alias mkdir='mkdir -pv'

#6: Colorize diff output

# You can compare files line by line using diff and use a tool called colordiff to colorize diff output:
# install  colordiff package :)
alias diff='colordiff'

#7: Make mount command output pretty and human readable format

alias mount='mount |column -t'

#8: Command short cuts to save time

# handy short cuts #
alias h='history'
alias j='jobs -l'

#9: Create a new set of commands

alias path='echo -e ${PATH//:/\\n}'
alias now='date +"%T"'
alias nowtime=now
alias nowdate='date +"%d-%m-%Y"'

#10: Set vim as default

alias vi=vim
alias svi='sudo vi'
alias vis='vim "+set si"'
alias edit='vim'

#11: Control output of networking tool called ping

# Stop after sending count ECHO_REQUEST packets #
alias ping='ping -c 5'
# Do not wait interval 1 second, go fast #
alias fastping='ping -c 100 -s.2'

#12: Show open ports
# Use netstat command to quickly list all TCP/UDP port on the server:
alias ports='netstat -tulanp'

#13: Wakeup sleeping servers

## replace mac with your actual server mac address #
alias wakeupnas01='/usr/bin/wakeonlan 00:11:32:11:15:FC'
alias wakeupnas02='/usr/bin/wakeonlan 00:11:32:11:15:FD'
alias wakeupnas03='/usr/bin/wakeonlan 00:11:32:11:15:FE'

#14: Control firewall (iptables) output

## shortcut  for iptables and pass it via sudo#
alias ipt='sudo /sbin/iptables'

# display all rules #
alias iptlist='sudo /sbin/iptables -L -n -v --line-numbers'
alias iptlistin='sudo /sbin/iptables -L INPUT -n -v --line-numbers'
alias iptlistout='sudo /sbin/iptables -L OUTPUT -n -v --line-numbers'
alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v --line-numbers'
alias firewall=iptlist

#15: Debug web server / cdn problems with curl

# get web server headers #
alias header='curl -I'

# find out if remote server supports gzip / mod_deflate or not #
alias headerc='curl -I --compress'

#16: Add safety nets

# do not delete / or prompt if deleting more than 3 files at a time #
alias rm='rm -I --preserve-root'

# confirmation #
alias mv='mv -i'
alias cp='cp -i'
alias ln='ln -i'

# Parenting changing perms on / #
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

#19: Tune sudo and su

# become root #
alias root='sudo -i'
alias su='sudo -i'

#20: Pass halt/reboot via sudo

# reboot / halt / poweroff
alias reboot='sudo /sbin/reboot'
alias poweroff='sudo /sbin/poweroff'
alias halt='sudo /sbin/halt'
alias shutdown='sudo /sbin/shutdown'

#22: Alias into our backup stuff

# if cron fails or if you want backup on demand just run these commands #
# again pass it via sudo so whoever is in admin group can start the job #
# Backup scripts #
alias backup='sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type local --taget /raid1/backups'
alias nasbackup='sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type nas --target nas01'
alias s3backup='sudo /home/scripts/admin/scripts/backup/wrapper.backup.sh --type nas --target nas01 --auth /home/scripts/admin/.authdata/amazon.keys'
alias rsnapshothourly='sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys --config /home/scripts/admin/scripts/backup/config/adsl.conf'
alias rsnapshotdaily='sudo  /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf'
alias rsnapshotweekly='sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf'
alias rsnapshotmonthly='sudo /home/scripts/admin/scripts/backup/wrapper.rsnapshot.sh --type remote --target nas03 --auth /home/scripts/admin/.authdata/ssh.keys  --config /home/scripts/admin/scripts/backup/config/adsl.conf'
alias amazonbackup=s3backup

#23: Desktop specific – play avi/mp3 files on demand

## play video files in a current directory ##
# cd ~/Download/movie-name
# playavi or vlc
alias playavi='mplayer *.avi'
alias vlc='vlc *.avi'

# play all music files from the current directory #
alias playwave='for i in *.wav; do mplayer "$i"; done'
alias playogg='for i in *.ogg; do mplayer "$i"; done'
alias playmp3='for i in *.mp3; do mplayer "$i"; done'

# play files from nas devices #
alias nplaywave='for i in /nas/multimedia/wave/*.wav; do mplayer "$i"; done'
alias nplayogg='for i in /nas/multimedia/ogg/*.ogg; do mplayer "$i"; done'
alias nplaymp3='for i in /nas/multimedia/mp3/*.mp3; do mplayer "$i"; done'

# shuffle mp3/ogg etc by default #
alias music='mplayer --shuffle *'

#24: Set default interfaces for sys admin related commands

## All of our servers eth1 is connected to the Internets via vlan / router etc  ##
alias dnstop='dnstop -l 5  eth1'
alias vnstat='vnstat -i eth1'
alias iftop='iftop -i eth1'
alias tcpdump='tcpdump -i eth1'
alias ethtool='ethtool eth1'

# work on wlan0 by default #
# Only useful for laptop as all servers are without wireless interface
alias iwconfig='iwconfig wlan0'

#25: Get system memory, cpu usage, and gpu memory info quickly

## pass options to free ##
alias meminfo='free -m -l -t'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

## Get server cpu info ##
alias cpuinfo='lscpu'

## older system use /proc/cpuinfo ##
##alias cpuinfo='less /proc/cpuinfo' ##

## get GPU ram on desktop / laptop##
alias gpumeminfo='grep -i --color memory /var/log/Xorg.0.log'

## this one saved by butt so many times ##
alias wget='wget -c'

#my default browser
alias browser=firefox

## set some other defaults ##
alias df='df -H'
alias du='du -ch'

# top is atop, just like vi is vim
alias top='atop'

## nfsrestart  - must be root  ##
## refresh nfs mount / cache etc for Apache ##
alias nfsrestart='sync && sleep 2 && /etc/init.d/httpd stop && umount netapp2:/exports/http && sleep 2 && mount -o rw,sync,rsize=32768,wsize=32768,intr,hard,proto=tcp,fsc natapp2:/exports /http/var/www/html &&  /etc/init.d/httpd start'

## Memcached server status  ##
alias mcdstats='/usr/bin/memcached-tool 10.10.27.11:11211 stats'
alias mcdshow='/usr/bin/memcached-tool 10.10.27.11:11211 display'

## quickly flush out memcached server ##
alias flushmcd='echo "flush_all" | nc 10.10.27.11 11211'

## supply list of urls via file or stdin
alias cdnmdel='/home/scripts/admin/cdn/purge_cdn_cache --profile akamai --stdin'
alias amzcdnmdel='/home/scripts/admin/cdn/purge_cdn_cache --profile amazon --stdin'
bash_prompt_command() {
  RTN=$?
  prevCmd=$(prevCmd $RTN)
}
PROMPT_COMMAND=bash_prompt_command
prevCmd() {
  if [ $1 == 0 ] ; then
    echo $GREEN
  else
    echo $RED
  fi
}
if [ $(tput colors) -gt 0 ] ; then
  RED=$(tput setaf 1)
  GREEN=$(tput setaf 2)
  RST=$(tput op)
fi
# export PS1="[e[36m]u.h.W[e[0m][$prevCmd]>[$RST]"

dotSlash=""
for i in 1 2 3 4
do
  dotSlash=${dotSlash}'../';
  baseName=".${i}"
  alias $baseName="cd ${dotSlash}"
done

#progress bar on file copy. Useful evenlocal.
alias cpProgress="rsync --progress -ravz"

#I find it useful when emailing blurbs to people and want to illustrate long timeout in one pass.
alias ping="time ping"

alias du1='du -d 1'

# To open last edited file

alias lvim="vim -c \"normal '0\""

function cdl() {
  cd "$@";
  ls -al;
}
alias ..='cdl ..'

#Grabs the disk usage in the current directory
alias usage='du -ch | grep total'

#Gets the total disk usage on your machine
alias totalusage='df -hl --total | grep total'

#Shows the individual partition usages without the temporary memory values
alias partusage='df -hlT --exclude-type=tmpfs --exclude-type=devtmpfs'

#Gives you what is using the most space. Both directories and files. Varies on
#current directory
alias most='du -hsx * | sort -rh | head -10'

alias usage='du -ch 2> /dev/null |tail -1'

# shoot the fat ducks in your current dir and sub dirs
alias ducks='du -ck | sort -nr | head'

alias ps2='ps -ef | grep -v $$ | grep -i '
alias psg='ps -Helf | grep -v $$ | grep -i -e WCHAN -e '

function f {
  arg_path=$1 && shift
  find $arg_path -wholename "*/path-to-ignore/*" -prune -o $* -print
}
# This will move you up by one dir when pushing AltGr .
# It will move you back when pushing AltGr Shift .
# bind '"â€¦":"pushd ..n"' # AltGr .
# bind '"Ã·":"popdn"' # AltGr Shift .
alias ll='ls -l'

# I also changed "mount" to "mnt" for the column's:
alias mnt="mount |column -t"

alias lt='ls -alrt'

#not an alias, but I thought this simpler than the cd control
#If you pass no arguments, it just goes up one directory.
#If you pass a numeric argument it will go up that number of directories.
#If you pass a string argument, it will look for a parent directory with that name and go up to it.
up() {
  dir=""
  if [ -z "$1" ]; then
    dir=..
  elif [[ $1 =~ ^[0-9]+$ ]]; then
    x=0
    while [ $x -lt ${1:-1} ]; do
      dir=${dir}../
      x=$(($x+1))
    done
  else
    dir=${PWD%/$1/*}/$1
  fi
  cd "$dir";
}

#turn screen off
alias screenoff="xset dpms force off"

#quick file tree
alias filetree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"

alias iptlistfw='sudo /sbin/iptables -L FORWARD -n -v –line-numbers'
alias pbcopy='xsel --clipboard --input'
alias pbpaste='xsel --clipboard --output'

# and something I use rather frequently when people chose funny file/directory names (sad enough):

chr() {
printf $(printf '%03o' $1)
}

ord() {
printf '%d' "'$1"
}

alias flush=sync

alias hg='history|grep '

alias trace='mtr --report-wide --curses $1'
alias killtcp='sudo ngrep -qK 1 $1 -d wlan0'
alias usage='ifconfig wlan0 | grep 'bytes''
alias connections='sudo lsof -n -P -i +c 15'
alias up1="cd .."
# edit multiple files split horizontally or vertically
alias e="vim -o "
alias E="vim -O "
# directory-size-date (remove the echo/blank line if you desire)
alias dsd="echo;ls -Fla"
alias dsdm="ls -FlAh | more"
# show directories only
alias dsdd="ls -FlA | grep :*/"
# show executables only
alias dsdx="ls -FlA | grep *"
# show non-executables
alias dsdnx="ls -FlA | grep -v *"
# order by date
alias dsdt="ls -FlAtr "
# dsd plus sum of file sizes
alias dsdz="ls -Fla $1 $2 $3 $4 $5 | awk '{ print; x=x+$5 } END { print \"total bytes = \",x }'"
# only file without an extension
alias noext='dsd | egrep -v ".|/"'
# send pwd to titlebar in puttytel
alias ttb='echo -ne "33]0;`pwd`07"'
# send parameter to titlebar if given, else remove certain paths from pwd
alias ttbx="titlebar"
# titlebar
# if [ $# -lt 1 ]; then
#   ttb=`pwd | sed -e 's+/projects/++' -e 's+/project01/++' -e 's+/project02/++' -e 's+/export/home/++' -e 's+/home/++'`
# else
#   ttb=$1
# fi
# echo -ne "33]0;`echo $ttb`07"
alias machine="echo you are logged in to ... `uname -a | cut -f2 -d' '`"
alias info='clear;machine;pwd'
# file tree of directories only
alias dirtree="ls -R | grep :*/ | grep ":$" | sed -e 's/:$//' -e 's/[^-][^/]*//--/g' -e 's/^/   /' -e 's/-/|/'"

#    This one pings a router quickly

alias pr="ping `netstat -nr| grep -m 1 -iE 'default|0.0.0.0' | awk '{print $2}'`"

alias rl='. ~/.bashrc'

alias clearx="echo -e '/0033/0143'"
alias clear='printf "33c"'

#  https://github.com/dmeekabc
#  https://github.com/dmeekabc/tagaProductized/tree/master/iboaUtils

#  IBOA Auto Alias Utility Six (6) Core Aliases:
#         aa – Add Alias
#         ea – Edit Alias
#        ia – Insert Alias
#         iap – Insert Alias (P)revious
#         iapw – Insert Alias (P)revious (W)atch
#         ta – Trace Alias
#         Run the iboaInstall.sh file to install the utility including all of the user/group/system alias files.
#         https://github.com/dmeekabc/tagaProductized/blob/master/iboaUtils/iboaInstall.sh

alias g="git"
alias gr="git rm -rf"
alias gs="git status"
alias ga="g add"
alias gc="git commit -m"
alias gp="git push origin master"
alias gl="git pull origin master"

alias ai="sd apt-get –yes install"
alias as="apt-cache search"
alias ar="sd apt-get –yes remove"

alias .p="pushd ."
alias p.="popd"
alias j='jobs -l'
alias h='history'
alias la='ls -aF'
alias lsrt='ls -lrtF'
alias lla='ls -alF'
alias ll='ls -lF'
alias ls='ls -F'
alias pu=pushd
alias pd=popd
alias r='fc -e -' # typing 'r' 'r'epeats the last command

# Sizes of the directories in the current directory
alias size='du -h –max-depth=1'
alias tf='tail -f '

# grep in *.cpp files
alias findcg='find . -iname "*.cpp" | xargs grep -ni --color=always '
# grep in *.cpp files
alias findhg='find . -iname "*.h" | xargs grep -ni --color=always '

#finds that help me cleanup when hit the limits

alias bigfiles="find . -type f 2>/dev/null | xargs du -a 2>/dev/null | awk '{ if ($1 > 5000) print $0 }'"
alias verybigfiles="find . -type f 2>/dev/null | xargs du -a 2>/dev/null | awk '{ if ($1 > 500000) print $0 }'"

#show only my procs
alias psme='ps -ef | grep $USER --color=always '
alias exiy='exit'
# Do not wait interval 1 second, go fast #
alias fastping='ping -c 100 -i.2'

# Back Up [function, not alias] – Copy a file to the current directory with today's date automatically appended to the end.
bu() { cp $@ $@.backup-`date +%y%m%d`; echo "`date +%Y-%m-%d` backed up $PWD/$@" >> ~/.backups.log; }

mcd () {
mkdir -p $1;
cd $1
}

alias kk='sudo kill' # Expecting a pid
pss() {
  [[ ! -n ${1} ]] && return; # bail if no argument
  pro="[${1:0:1}]${1:1}"; # process-name –> [p]rocess-name (makes grep better)
  ps axo pid,command | grep -i ${pro}; # show matching processes
  pids="$(ps axo pid,command | grep -i ${pro} | awk '{print $1}')"; # get pids
  complete -W "${pids}" kk # make a completion list for kk
}


chmoddr()   {
  # CHMOD _D_irectory _R_ecursivly

  if [ -d "$1" ]; then
    echo "error: please use the mode first, then the directory";
    return 1;
  elif [ -d "$2" ]; then
    find $2 -type d -print0 | xargs -0 chmod $1;
  fi
}

assimilate(){
  _assimilate_opts="";

  if [ "$#" -lt 1 ]; then
    echo "not enough arguments";
    return 1;
  fi
  SSHSOCKET=~/.ssh/assimilate_socket.$1;
  echo "resistence is futile! $1 will be assimilated";
  if [ "$2" != "" ]; then
    _assimilate_opts=" -p$2 ";
  fi

  ssh -M -f -N $_assimilate_opts -o ControlPath=$SSHSOCKET $1;
  if [ ! -S $SSHSOCKET ]; then echo "connection to $1 failed! (no socket)"; return 1; fi

  ### begin assimilation

  # copy files
  scp -o ControlPath=$SSHSOCKET ~/.bashrc $1:~;
  scp -o ControlPath=$SSHSOCKET -r ~/.config/htop $1:~;

  # import ssh key
  if [[ -z $(ssh-add -L|ssh -o ControlPath=$SSHSOCKET $1 "grep -f - ~/.ssh/authorized_keys") ]]; then
    ssh -o ControlPath=$SSHSOCKET $1 "mkdir ~/.ssh > /dev/null 2>&1";
    ssh-add -L > /dev/null&&ssh-add -L|ssh -o ControlPath=$SSHSOCKET $1 "cat >> ~/.ssh/authorized_keys"
  fi
  ssh -o ControlPath=$SSHSOCKET $1 "chmod -R 700 ~/.ssh";

  ### END
  ssh -S $SSHSOCKET -O exit $1 2>1 >/dev/null;
}

alias watchtail='watch -n .5 tail -n 20'
alias watchdir='watch -n .5 ls -la'
alias watchsize='watch -n .5 du -h –max-depth=1'

# grep all files in the current directory
function _grin() { grep -rn --color $1 .;}
alias grin=_grin
# find file by name in current directory
function _fn() { find . -name $1;}
alias fn=_fn

#    http://philip.vanmontfort.be/bestanden/linux/bashrc

# three letters to tune into my favorite radio stations
alias dlf="mplayer -nocache -audiofile-cache 64 -prefer-ipv4 $(which GET 2> /dev/null && GET http://www.dradio.de/streaming/dlf.m3u|head -1)"
alias dlr="mplayer -nocache -audiofile-cache 64 -prefer-ipv4 $(which GET 2> /dev/null && GET http://www.dradio.de/streaming/dkultur.m3u|head -1)"

# When using mplayer you may set bookmarks using 'i'. You may read it easier using

mplay() {
  export EDL="$HOME/.mplayer/current.edl"
  mplayer -really-quiet -edlout $EDL $* ;
  echo $(awk '{print $2 }' $EDL | cut -d, -f1 | cut -d. -f1 )
}

# Buring ISO-images does not need starting GUIs and clicking around

alias isowrite="cdrecord dev=1,0,0 fs=32M driveropts=burnfree speed=120 gracetime=1 -v -dao -eject -pad -data"

alias s=less        # use less a lot to see config files and logfiles
alias lst='ls -ltr'   # most recently updated files last

# when checking for servers and tcp ports for a non root user these are also handy
alias myps='ps -fHu $USER'     # if not $USER, try $LOGIN
alias myports="netstat -lntp 2>/dev/null | grep -v ' - *$'"  # Linux only?
alias untar='tar -zxvf'

# quick check of JSON files on the command line:
function json() { cat "$@" | /usr/bin/python -m json.tool ;}

# grep command history.  Uses function so a bare 'gh' doesn't just hang waiting for input.
function gh () {
if [ -z "$1" ]; then
echo "Bad usage. try:gh run_test";
else
history | egrep $* |grep -v "gh $*"
fi
}

alias h='history 100'     # give only recent history be default.

alias wcl='wc -l'        # count # of lines
alias perlrep='perl -i -p -e '               # use perl regex to do find/replace in place on files.  CAREFUL!!

# list file/folder sizes sorted from largest to smallest with human readable sizes
function dus () {
du --max-depth=0 -k * | sort -nr | awk '{ if($1>=1024*1024) {size=$1/1024/1024; unit="G"} else if($1>=1024) {size=$1/1024; unit="M"} else {size=$1; unit="K"}; if(size<10) format="%.1f%s"; else format="%.0f%s"; res=sprintf(format,size,unit); printf "%-8s %sn",res,$2 }'
}
#    http://wiki.linuxquestions.org/wiki/Scripting#Command_Line_Trash_Can

# Define a command to cd then print the resulting directory.
# I do this to avoid putting the current directory in my prompt.
#alias cd='cdir'
#function cdir () {
#  cd "$*"
#  pwd
#}

function mkcd(){
  mkdir -p $1
  cd $1
}
function ga() { alias | grep -i $*; functions | grep -i $*}

# Find a file from the current directory
alias ff='find . -name '

# grep the output of commands
alias envg='env | grep -i'
alias psg='ps -eaf | head -1; ps -eaf | grep -v " grep " | grep -i'
alias aliasg='alias | grep -i'
alias hg='history | grep -i'

# cd to the directory a symbolically linked file is in.
function cdl() {
  if [ "x$1" = "x" ] ; then
    echo "Missing Arg"
  elif [ -L "$1" ] ; then
    link=`/bin/ls -l $1 | tr -s ' ' | cut -d' ' -f10`
    if [ "x$link" = "x" ] ; then
      echo "Failed to get link"
      return
    fi
    dirName_=`dirname $link`
    cd "$dirName_"
  else
    echo "$1 is not a symbolic link"
  fi
  return
}
# cd to the dir that a file is found in.
function cdff {
  filename=`find . -name $1 | grep -iv "Permission Denied" | head -1`
  if [ "xx${filename}xx" != "xxxx" ] ; then
    dirname=${filename%/*}
    if [ -d $dirname ] ; then
      cd $dirname
    fi
  fi
}

set -o vi
# eval `resize`

# awk tab delim  (escape '' awk to disable aliased awk)
tawk='awk -F "t" '
# case insensitive grep
alias ig="grep --color -i "

# ls sort by time
alias lt="ls -ltr "
# ls sort by byte size
alias lS='ls -Slr'

# ps by process grep  (ie. psg chrome)
alias psg='ps -ef|grep --color '
# ps by user
alias psu='ps auxwwf '
# ps by user with grep (ie. psug budman)
alias psug='psu|grep --color '

# find broken symlinks
alias brokenlinks='find . -xtype l -printf "%p -> %ln"'

# which and less a script (ie. ww backup.ksh)
function ww { if [[ ! -z $1 ]];then _f=$(which $1);echo $_f;less $_f;fi }

# For those of you who use Autosys:

# alias to read log files based on current run date (great for batch autosys jobs)
# ie.  slog mars-reconcile-job-c
export RUN_DIR=~/process/dates
function getRunDate {
  print -n $(awk -F'"' '/^run_date=/{print $2}' ~/etc/run_profile)
}
function getLogFile {
  print -n $RUN_DIR/$(getRunDate)/log/$1.log
}
function showLogFile {
  export LOGFILE=$(getLogFile $1);
  print "nLog File: $LOGFILEn";
  less -z-4 $LOGFILE;
}
alias slog="showLogFile "

# Autosys aliases
alias av="autorep -w -J "
alias av0="autorep -w -L0 -J "
alias avq="autorep -w -q -J "
alias aq0="autorep -w -L0 -q -J "
alias ava="autorep -w -D PRD_AUTOSYS_A -J "
alias avc="autorep -w -D PRD_AUTOSYS_C -J "
alias avt="autorep -w -D PRD_AUTOSYS_T -J "
alias am="autorep -w -M "
alias ad="autorep -w -d -J "
alias jd="job_depends -w -c -J "
alias jdd="job_depends -w -d -J "
alias jrh="jobrunhist -J "
alias fsjob="sendevent -P 1 -E FORCE_STARTJOB -J "
alias startjob="sendevent -P 1 -E FORCE_STARTJOB -J "
alias runjob="sendevent -P 1 -E STARTJOB -J "
alias killjob="sendevent -P 1 -E KILLJOB -J "
alias termjob="sendevent -P 1 -E KILLJOB -K 15 -J "
alias onhold="sendevent -P 1 -E JOB_ON_HOLD -J "
alias onice="sendevent -P 1 -E JOB_ON_ICE -J "
alias offhold="sendevent -P 1 -E JOB_OFF_HOLD -J "
alias office="sendevent -P 1 -E JOB_OFF_ICE -J "
alias setsuccess="sendevent -P 1 -E CHANGE_STATUS -s SUCCESS -J "
alias inactive="sendevent -P 1 -E CHANGE_STATUS -s INACTIVE -J "
alias setterm="sendevent -P 1 -E CHANGE_STATUS -s TERMINATED -J "
alias failed="njilgrep -npi -s FA $AUTOSYS_JOB_PREFIX"
alias running="njilgrep -npi -s RU $AUTOSYS_JOB_PREFIX"
alias iced="njilgrep -npi -s OI $AUTOSYS_JOB_PREFIX"
alias held="njilgrep -npi -s OH $AUTOSYS_JOB_PREFIX"

alias killme='slay $USER'

function gi(){
  npm install --save-dev grunt-"$@"
}

function gci(){
  npm install --save-dev grunt-contrib-"$@"
}

alias v='vim'
alias vi='vim'
alias e='emacs'
alias t='tail -n200'
alias h='head -n20'
alias g='git'
alias p='pushd'
alias o='popd'
alias d='dirs -v'
alias rmf='rm -rf'

alias reboot='echo "Are you sure you want to reboot host `hostname` [y/N]?" && read reboot_answer && if [ "$reboot_answer" == y ]; then /sbin/reboot; fi'


alias shutdown='echo "Are you sure you want to shutdown host `hostname` [y/N]?" && read shutdown_answer && if [ "$shutdown_answer" == y ]; then /sbin/shutdown -h now; fi'
## get rid of command not found ##

# Find all IP addresses connected to your network
alias netcheck='nmap -sP $(ip -o addr show | grep inet  | grep eth | cut -d  -f 7)'

# See real time stamp when running dmesg
alias dmesg='dmesg|perl -ne "BEGIN{$a= time()- qx:cat /proc/uptime:};s/[s*(d+).d+]/localtime($1 + $a)/e; print $_;" | sed -e "s|(^.*"`date +%Y`" )(.*)|x1b[0;34m1x1b[0m - 2|g"'

# Nice readable way to see memory usage
alias minfo='egrep "Mem|Cache|Swap" /proc/meminfo'

# Need to figure out which drive your usb is assigned? Functions work the same way as an alias. Simply copy the line into your .profile/.bashrc file. Then type: myusb

myusb () { usb_array=();while read -r -d $'n'; do usb_array+=("$REPLY"); done < <(find /dev/disk/by-path/ -type l -iname *usb*scsi* -not -iname *usb*scsi*part* -print0 | xargs -0 -iD readlink -f D | cut -c 8) && for usb in "${usb_array[@]}"; do echo "USB drive assigned to sd$usb"; done; }

alias gr="grep -E -i –color"

# Sometimes when working with text files this is quite helpful:

alias top10="sort|uniq -c|sort -n -r|head -n 10"
# list usernames
alias lu="awk -F: '{ print $1}' /etc/passwd"

# better ls
alias ls='ls -lAi --group-directories-first --color="always"'

# make basic commands interactive and verbose
alias cp='cp -iv'      # interactive
alias rm='rm -ri'      # interactive
alias mv='mv -iv'       # interactive, verbose
alias grep='grep -i --color="always"'  # ignore case

# starts nano with line number enabled
alias nano='nano -c'

# clear screen
alias cl='clear'

# shows the path variable
alias path='echo -e ${PATH//:/\n}'

# Filesystem diskspace usage
alias dus='df -h'

# quick ssh to raspberry pi
alias raspi='ssh root@192.168.1.6'

# perform 'ls' after 'rm' if successful.
rmls() {
  rm "$*"
  RESULT=$?
  if [ "$RESULT" -eq 0 ]; then
    ls
  fi
}

alias rm='rmls'

# reloads changes
alias rfc='source ~/.bashrc; cl'
alias rf='source ~/.bashrc'

# perform 'ls' after 'cd' if successful.
function cdls() {
  builtin cd "$*"
  RESULT=$?
  if [ "$RESULT" -eq 0 ]; then
    ls
  fi
}

alias cd='cdls'

# search for a string recursively in any C source files
alias src-grep='find . -name "*.[ch]" | xargs grep '

# for easily editting the path variable
function vimpath () {
  declare TFILE=/tmp/path.$LOGNAME.$$;
  echo $PATH | sed 's/^:/.:/;s/:$/:./' | sed 's/::/:.:/g' | tr ':' '12' > $TFILE;
  vim $TFILE;
  PATH=`awk ' { if (NR>1) printf ":"; printf "%s",$1 }' $TFILE`;
  rm -f $TFILE;
  echo $PATH
}

alias vimpath='vimpath'
function rmls() {
  rm "$*"
  RESULT=$?
  if [ "$RESULT" -eq 0 ]; then
    ls
  fi
}
alias rm='rmls'
alias backupstuff='rsync -avhpr --delete-delay /some/location/foo/bar /media/your/remote/location'

#    quick update bashrc etc:
alias bashrc="vim ~/.bashrc && source ~/.bashrc"

#To play a random collection of music from your music library.
#(You need to have VLC installed)
alias play='nvlc ${HOME}/music/ -Z'

#    Whats the weather doing?
alias rain='curl -4 http://wttr.in/Madrid'

#    One of my favorite: copy something from command line to clipboard:
alias c='xsel --clipboard'
#    Then use like:
#    grep John file_for_contacts | c

alias s="sshpass -p'mypassword' ssh"

# Count the number of files in current dir
alias lsc='ls -l | wc -l'

# Sort directories by sizes
alias dush='du -h --max-depth=1 | sort -h'

# Can't see all the files in one page ?
alias lsless='ls | less'

# Make a video capture of the desktop
alias capturedesktop='avconv -f x11grab -r 25 -s 1900x1000 -i :0.0+0,24 -vcodec libx264  -threads 0'

# Capture desktop, with sound
alias capturedesktop_withsound='avconv -f x11grab -r 25 -s 1900x1000 -i :0.0+0,24 -vcodec libx264  -threads 0 -f alsa -i hw:0 '

# Only print actual code/configuration
alias removeblanks="egrep -v &#039;(^[[:space:]]*#|^$|^[[:space:]]*//)"

# Useful when you want to scp to your own machine from a remote server
alias myip="ifdata -pa eno1";

#    List files in order of ascending size (the second form takes a file-pattern argument):
function lsdu() { ls -l $* | sort --key=5.1 -n; };
function lsduf() { ls -l | egrep $* | sort --key=5.1 -n; };

#    List the 10 most recently edited/changed files (m = more, a poor-man's more)
alias lsm='ls -lt | head -n 10'

#    List the tasks using the most CPU time
alias hogs='ps uxga | sort --key=3.1 -n'
alias sdiff='sdiff -w 240'
function pyloc() { egrep -v '^[ ]*(#|$dollar)' $* | wc; }; # count lines (python, sh)
function loc() { egrep -v '^[ ]*(//|/*|*|$dollar)' $* | wc; }; # count lines (c, c++)

alias renamedots="rename 'y/ :/ /' *"
alias ab='docker run --rm piegsaj/ab'
alias php='docker run --rm -it -v "$PWD":/opt -w /opt php php'
alias java='docker run --rm -it -v "$PWD":/opt -w /opt java java'
alias node='docker run --rm -it -v "$PWD":/opt -w /opt node node'
alias ruby='docker run --rm -it -v "$PWD":/opt -w /opt ruby ruby'
alias python='docker run --rm -it -v "$PWD":/opt -w /opt python python'
alias htop='docker run --rm -it --pid host tehbilly/htop'
alias mysql='docker run --rm -it imega/mysql-client mysql'
